// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// URLManager is an autogenerated mock type for the URLManager type
type URLManager struct {
	mock.Mock
}

// DeleteUrl provides a mock function with given fields: alias
func (_m *URLManager) DeleteUrl(alias string) error {
	ret := _m.Called(alias)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(alias)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetUrl provides a mock function with given fields: alias
func (_m *URLManager) GetUrl(alias string) (string, error) {
	ret := _m.Called(alias)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(alias)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(alias)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(alias)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveUrl provides a mock function with given fields: url_, alias
func (_m *URLManager) SaveUrl(url_ string, alias string) error {
	ret := _m.Called(url_, alias)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(url_, alias)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewURLManager interface {
	mock.TestingT
	Cleanup(func())
}

// NewURLManager creates a new instance of URLManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewURLManager(t mockConstructorTestingTNewURLManager) *URLManager {
	mock := &URLManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
